<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="deptBoardMapper">

	<resultMap id="deptBoardResult" type="Board">
		<result column="board_no" property="boardNo"/>
		<result column="board_title" property="boardTitle"/>
		<result column="board_content" property="boardContent"/>
		<result column="board_writer" property="boardWriter"/> <!-- 사원번호 -->
		<result column="b_writer" property="boWriter"/> <!-- 사원이름 -->
		<result column="dept_code" property="deptCode"/>
		<result column="job_name" property="jobName" />
		<result column="board_count" property="boardCount"/>
		<result column="board_category" property="boardCategory"/>
		<result column="board_en_date" property="boardEnDate"/>
		<result column="board_mo_date" property="boardMoDate"/>
		<result column="board_status" property="boardStatus"/>
		<result column="board_top" property="boardTop"/>
	</resultMap>
	
	<resultMap id="replyResult" type="Reply">
		<result column="reply_no" property="replyNo" />
		<result column="reply_type" property="replyType" />
		<result column="re_board_no" property="reBoardNo" />
		<result column="reply_depth" property="replyDepth" />
		<result column="reply_parent" property="replyParent" />
		<result column="reply_content" property="replyContent" />
		<result column="reply_writer" property="replyWriter" />
		<result column="reply_job" property="replyJob" />
		<result column="reply_blind" property="replyBlind" />
		<result column="reply_date" property="replyDate" />
		<result column="reply_status" property="replyStatus" />
	</resultMap>
	
	<resultMap id="attachmentResult" type="Attachment">
		<result column="at_no" property="atNo" />
		<result column="at_ref_bno" property="atRefBno" />
		<result column="at_category_name" property="atCategory"/>
		<result column="at_origin_name" property="atOriginName" />
		<result column="at_change_name" property="atChangeName"/>
		<result column="at_upload_date" property="atUploadDate"/>
		<result column="at_status" property="atStatus"/>
	</resultMap>

	<!-- 게시글 페이징 처리 -->
	<select id="selectListCountD" resultType="_int">
		select
			   count(*)
		  from (
		  		select
					   board_no
					 , board_title
					 , m.mem_name || ' ' || job_name as "b_writer"
					 , b.dept_code
					 , to_char(board_en_date, 'YYYY-MM-DD') as "board_en_date"
					 , board_count
					 , board_top
				  from tb_board b
				  join tb_member m on(b.board_writer = m.mem_no)
				  join tb_job j using(job_code)
				 where board_category = 2
				   and board_status = 'Y'
				   <if test="deptCode != null and !deptCode.equals('DN') and deptCode neq ''">
		           		and b.dept_code = #{deptCode}
		           </if>
		           <if test="keyword != null and keyword neq ''">
		           		and board_title || mem_name like ('%${keyword}%')
		           </if>
				 order
				 	by (CASE WHEN board_top = 'Y' THEN 1 ELSE 2 END) asc, 1 desc
		  )
	</select>
	
	<!-- 부서게시판 리스트 조회 -->
	<select id="selectListD" resultMap="deptBoardResult">
		select
			   board_no
			 , board_title
			 , m.mem_name || ' ' || job_name as "b_writer"
			 , b.dept_code as "dept_code"
			 , to_char(board_en_date, 'YYYY-MM-DD') as "board_en_date"
			 , board_count
			 , board_top
		  from tb_board b
		  join tb_member m on(b.board_writer = m.mem_no)
		  join tb_job j using(job_code)
		 where board_category = 2
		   and board_status = 'Y'
           <if test="deptCode != null and !deptCode.equals('DN') and deptCode neq ''">
           		and b.dept_code = #{deptCode}
           </if>
           <if test="keyword != null and keyword neq ''">
           		and board_title || mem_name like ('%${keyword}%')
           </if>
		 order
		 	by (CASE WHEN board_top = 'Y' THEN 1 ELSE 2 END) asc, 1 desc
	</select>
	
	<!-- 조회수 증가 -->
	<update id="increaseCountD">
		update 
			   tb_board
		   set board_count = board_count+1
		 where board_no = #{board_no} 
		   and board_status = 'Y'
	</update>
	
	<!-- 부서 게시판 상세 조회 -->
  	<select id="selectDeptBoard" resultMap="deptBoardResult">
  		select
  			   board_no
  			 , board_title
  			 , board_content
  			 , board_writer
  			 , m.mem_name as "b_writer"
  			 , board_count
  			 , to_char(board_en_date, 'YYYY/MM/DD HH24:MI') as "board_en_date"
  			 , j.job_name
  		  from tb_board b
  		  join tb_member m on(b.board_writer = m.mem_no)
  		  join tb_job j using(job_code)
  		 where board_no = #{boardNo}
  		   and board_status = 'Y'
  	</select>
  	
  	<!-- 첨부파일 조회 -->
  	<select id="selectAtListD" resultMap="attachmentResult">
  		select
		       at_no
		     , at_ref_bno
		     , at_origin_name
		     , at_change_name
		     , at_upload_date
		  from tb_attachment
		 where at_ref_bno = #{boardNo}
		   and at_category = 3
		   and at_status = 'Y'
  	</select>
  	
  	<!-- 게시글 상세 조회 시 댓글리스트 조회 -->
  	<select id="selectReplyListD" resultMap="replyResult">
  		select 
		       reply_no
		     , re_board_no
		     , reply_depth
		     , reply_parent
		     , reply_content
		     , reply_writer
		     , reply_job
		     , to_char(reply_date, 'YY-MM-DD HH24:MI') as "reply_date"
		     , reply_status
		     , reply_wno
		  from tb_reply
		 where reply_type = 4
		   and re_board_no = #{boardNo}
		 start with reply_parent = 0
		connect by prior reply_no = reply_parent
		order siblings by reply_no asc, reply_parent asc
  	</select>
  	
  	<!-- 댓글 등록 -->
  	<insert id="insertReplyD">
  		insert
  		  into tb_reply
  		  (
  		  	reply_no
  		  , reply_type
  		  , re_board_no
  		  , reply_depth
  		  , reply_parent
  		  , reply_content
  		  , reply_writer
  		  , reply_job
  		  , reply_date
  		  , reply_wno
  		  )
  		  values
  		  (
  		  	seq_reno.nextval
  		  , 4
  		  , #{reBoardNo}
  		  , #{replyDepth}
  		  , #{replyParent}
  		  , #{replyContent}
  		  , #{replyWriter}
  		  , #{replyJob}
  		  , sysdate
  		  , #{replyWno}
  		  )
  		  
  	</insert>
  	
  	<!-- 댓글 조회 -->
  	<select id="selectReplyD" resultMap="replyResult">
  		select 
		       reply_no
		     , re_board_no
		     , reply_depth
		     , reply_parent
		     , reply_content
		     , reply_writer
		     , reply_job
		     , to_char(reply_date, 'YY-MM-DD HH24:MI') as "reply_date"
			 , reply_status
		  from tb_reply
		 where reply_no = #{replyNo}
		 start with reply_parent = 0
		connect by prior reply_no = reply_parent
		order siblings by reply_no asc, reply_parent asc
  	</select>
  	
  	<!-- 댓글 수정 -->
  	<update id="updateReplyD">
  		update 
  			   tb_reply
  		   set reply_content = #{replyContent},
  		   	   reply_mo_date = sysdate
  		 where reply_no = #{replyNo}
  		   and reply_status = 'Y'
  	</update>
  	
  	<!-- 댓글 삭제 -->
  	<update id="deleteReplyD">
  		update
  			   tb_reply
  		   set reply_status = 'N'
  		 where reply_no = #{replyNo}
  	</update>
  	
  	<!-- 게시글 등록 -->
  	<insert id="insertDeptBoard">
  		insert
  		  into tb_board
  		  (
  		  	board_no
  		  , board_title
  		  , board_content
  		  , board_writer
  		  , dept_code
  		  , board_category
  		  , board_en_date
  		  )
  		  values
  		  (
  		  	seq_bono.nextval
  		  , #{boardTitle}
  		  , #{boardContent}
  		  , #{boardWriter}
  		  , #{deptCode}
  		  , 2
  		  , sysdate
  		  )
  	</insert>
  	
  	<!-- 첨부파일 등록 -->
  	<insert id="insertAttachmentD">
  		insert
  		  into tb_attachment
  		  (
  		  	at_no
  		  , at_ref_bno
  		  , at_category
  		  , at_origin_name
  		  , at_change_name
  		  )
  		  values
  		  (
  		  	seq_atno.nextval
  		  , seq_bono.currval
  		  , 3
  		  , #{atOriginName}
  		  , #{atChangeName}
  		  )
  	</insert>
  	
  	<!-- 게시글 삭제 -->
  	<update id="deleteDeptBoard">
  		update tb_board
  		   set board_status = 'N'
  		 where board_no = #{boardNo}
  	</update>
  	
  	<!-- 게시글 수정 -->
  	<update id="updateDeptBoard">
  		update tb_board
  		   set board_title = #{boardTitle}
  		     , board_content = #{boardContent}
  		     , board_mo_date = sysdate
  		 where board_no = #{boardNo}
  	</update>
  	
  	<!-- 첨부파일 수정 -->
  	<update id="updateAttachmentD">
  		update tb_attachment
  		   set at_status = 'N'
  		 where at_no = #{atNo}
  	</update>
  	
  	<!-- 전체검색 부서 게시판 -->
  	<select id="searchBoard"	resultMap="deptBoardResult">
		select
  			   board_no
  			 , board_title
  			 , board_content
  			 , board_writer
  			 , m.mem_name as "b_writer"
  			 , board_count
  			 , j.job_name
  		  from tb_board b
  		  join tb_member m on(b.board_writer = m.mem_no)
  		  join tb_job j using(job_code)
  		 where b.dept_code = #{deptCode}
  		   and board_category = 2
  		   and board_status = 'Y'	
		   and (board_content like '%' || #{key} || '%'
  		    or board_title like '%' || #{key} || '%')	
  	</select>
  	
  	<!-- 메인페이지 부서게시판 리스트 조회 -->
  	<select id="selectListH" resultMap="deptBoardResult">
		select
			   board_no
			 , board_title
			 , m.mem_name || ' ' || job_name as "b_writer"
			 , m.dept_code
			 , to_char(board_en_date, 'YYYY-MM-DD') as "board_en_date"
			 , board_count
			 , board_top
		  from tb_board b
		  join tb_member m on(b.board_writer = m.mem_no)
		  join tb_job j using(job_code)
		 where board_category = 2
		   and board_status = 'Y'
           and b.dept_code = #{deptCode}
		 order
		 	by (CASE WHEN board_top = 'Y' THEN 1 ELSE 2 END) asc, 1 desc
	</select>
  	
  	
  	
</mapper>
