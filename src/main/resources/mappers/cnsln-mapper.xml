<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cnslnMapper">
	
	<resultMap id="cnslnResult" type="Cnsln">
		<result column="cnsln_no" property="cnslnNo" />
		<result column="cnsln_title" property="cnslnTitle" />
		<result column="cnsln_writer" property="cnslnWriter" />
		<result column="cnsln_start_date" property="cnslnStartDate" />
		<result column="cnsln_end_date" property="cnslnEndDate" />
		<result column="cnsln_charge_no" property="cnslnChargeNo" />
		<result column="cnsln_charge_list" property="cnslnChargeList" />
		<result column="cnsln_phone" property="cnslnPhone" />
		<result column="cnsln_topic" property="cnslnTopic" />
		<result column="cnsln_content" property="cnslnContent" />
		<result column="cnsln_real" property="cnslnReal" />
		<result column="cnsln_create_date" property="cnslnCreateDate" />
		<result column="cnsln_count" property="cnslnCount" />
		<result column="cnsln_status" property="cnslnStatus" />	
		<result column="student_no" property="studentNo" />
		<result column="cnsln_ec" property="cnslnEc" />	
		<collection property="member" resultMap="memberResult" />
		<collection property="Student" resultMap="studentResult" />
	</resultMap>
	
	<resultMap id="memberResult" type="Member">
		<result column="mem_no" property="memNo" />
		<result column="mem_name" property="memName" />
		<result column="dept_code" property="deptCode" />
		<result column="job_code" property="jobCode" />
		<result column="job_name" property="jobName" />
		<result column="mem_profile" property="memProfile" />
	</resultMap>
	
	<resultMap id="replyResult" type="Reply">
		<result column="reply_no" property="replyNo" />
		<result column="re_board_no" property="reBoardNo" />
		<result column="reply_depth" property="replyDepth" />
		<result column="reply_parent" property="replyParent" />
		<result column="reply_content" property="replyContent" />
		<result column="reply_writer" property="replyWriter" />
		<result column="reply_job" property="replyJob" />
		<result column="reply_date" property="replyDate" />
		<result column="reply_status" property="replyStatus" />
	</resultMap>
	
	<resultMap id="studentResult" type="Student">
		<result column="student_no" property="studentNo" />
		<result column="student_name" property="studentName" />
		<result column="student_phone" property="studentPhone" />
		<result column="student_email" property="studentEmail" />
		<result column="student_birth" property="studentBirth" />
		<result column="student_gender" property="studentGender" />
		<result column="student_en_date" property="studentEnDate" />
		<result column="class_title" property="classTitle" />
	</resultMap>	
	
	<select id="selectCnslnList" resultMap="cnslnResult">
		select cnsln_no
			 , cnsln_title
			 , cnsln_writer
			 , cnsln_start_date
			 , cnsln_end_date
			 , cnsln_charge_no
			 , cnsln_charge_list
			 , cnsln_phone
			 , cnsln_topic
			 , cnsln_content
			 , cnsln_real
			 , to_char(cnsln_create_date, 'YYYY-MM-DD') as "cnsln_create_date"
			 , cnsln_count
		  from tb_cnsln
		 where cnsln_writer = #{memNo}
		   and cnsln_status = 'Y'
		union
		select cnsln_no
			 , cnsln_title
			 , cnsln_writer
			 , cnsln_start_date
			 , cnsln_end_date
			 , cnsln_charge_no
			 , cnsln_charge_list
			 , cnsln_phone
			 , cnsln_topic
			 , cnsln_content
			 , cnsln_real
			 , to_char(cnsln_create_date, 'YYYY-MM-DD') as "cnsln_create_date"
			 , cnsln_count
		  from tb_cnsln
		 where cnsln_real = #{memNo}
		   and cnsln_status = 'Y'
		union
		select cnsln_no
			 , cnsln_title
			 , cnsln_writer
			 , cnsln_start_date
			 , cnsln_end_date
			 , cnsln_charge_no
			 , cnsln_charge_list
			 , cnsln_phone
			 , cnsln_topic
			 , cnsln_content
			 , cnsln_real
			 , to_char(cnsln_create_date, 'YYYY-MM-DD') as "cnsln_create_date"
			 , cnsln_count
		  from tb_cnsln
		 where cnsln_charge_no like '%' || #{memNo} || '%'
		   and cnsln_status = 'Y'
	</select>
	
	<insert id="insertCnsln">
		insert
		  into tb_cnsln
		  (
		    cnsln_no
		  , cnsln_title
		  , cnsln_writer
		  , cnsln_start_date
		  , cnsln_end_date
		  , cnsln_charge_no
		  , cnsln_charge_list
		  , cnsln_phone
		  , cnsln_topic
		  , cnsln_real
		  , student_no
		  , cnsln_ec
		  )
		  values
		  (
		    seq_cnno.nextval
		  , #{cnslnTitle}
		  , #{cnslnWriter}
		  , #{cnslnStartDate}
		  , #{cnslnEndDate}
		  , #{cnslnChargeNo}
		  , #{cnslnChargeList}
		  , #{cnslnPhone}
		  , #{cnslnTopic}
		  , #{cnslnReal}
		  , #{studentNo}
		  , #{cnslnEc}
		  )
	</insert>
	
	<insert id="insertStudent">
		insert
		  into tb_student
		  (
		   student_no
		 , student_name
		 , student_phone
		 , student_email
		 , student_birth
		 , student_gender
		 , student_en_date
		  )
		  values
		  (
		    seq_stno.nextval
		  , #{studentName}
		  , #{studentPhone}
		  , #{studentEmail}
		  , #{studentBirth}
		  , #{studentGender}
		  , sysdate
		  )
	</insert>
	
	<select id="selectMemberList" resultMap="memberResult">
		select *
		  from
		  (select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where mem_name like '%' || #{keyword} || '%'
		   and dept_code in ('DN', 'D3')
		   and not mem_no = #{memNo}
		 union
		 select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where job_name like '%' || #{keyword} || '%'
		   and dept_code in ('DN', 'D3')
		   and not mem_no = #{memNo}
		 )
		 order
		    by mem_no
	</select>
	
	<select id="selectMember" resultMap="memberResult">
		select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where mem_no = #{memNo}
	</select>
	
	<select id="selectCnsln" resultMap="cnslnResult">
		select cnsln_no
			 , cnsln_title
			 , cnsln_writer
			 , m.mem_name
			 , j.job_name as "job_name"
			 , cnsln_start_date
			 , cnsln_end_date
			 , cnsln_status
			 , cnsln_charge_no
			 , cnsln_charge_list
			 , cnsln_phone
			 , cnsln_topic
			 , cnsln_content
			 , cnsln_real
			 , cnsln_create_date
			 , cnsln_count
			 , student_no
		  	 , cnsln_ec
		  from tb_cnsln
		  join tb_member m on (cnsln_writer = m.mem_no)
		  join tb_job j on (j.job_code = m.job_code)
		 where cnsln_status = 'Y'
		   and cnsln_no = #{cNo}
	</select>
	
	<update id="increaseCount">
		update tb_cnsln
		   set cnsln_count = cnsln_count + 1
		 where cnsln_no = #{cNo}
		   and cnsln_status = 'Y'
	</update>
	
	<update id="updateCnsln">
		update tb_cnsln
		   set cnsln_title = #{cnslnTitle}
			 , cnsln_writer = #{cnslnWriter}
			 , cnsln_start_date = #{cnslnStartDate}
			 , cnsln_end_date = #{cnslnEndDate}
			 , cnsln_charge_no = #{cnslnChargeNo}
			 , cnsln_charge_list = #{cnslnChargeList}
			 , cnsln_phone = #{cnslnPhone}
			 , cnsln_topic = #{cnslnTopic}
			 , cnsln_content = #{cnslnContent}
			 , cnsln_real = #{cnslnReal}
			 , cnsln_modify_date = sysdate
			 , student_no = #{studentNo}
			 , cnsln_ec = #{cnslnEc}
		 where cnsln_no = #{cnslnNo}
	</update>
	
	<update id="deleteCnsln">
		update tb_cnsln
		   set cnsln_status = 'N'
		 where cnsln_no = #{cNo}
	</update>
	
	<select id="selectReplyList" resultMap="replyResult">
		select reply_no
			 , re_board_no
			 , reply_depth
			 , reply_parent
			 , reply_content
			 , reply_writer
			 , reply_job
			 , to_char(reply_date, 'YYYY-MM-DD (DY) HH24:MI') as "reply_date"
			 , reply_status
		  from tb_reply
		 where reply_type = 2
		   and re_board_no = #{cNo}
		 start with reply_parent = 0
		 connect by prior reply_no = reply_parent
		 order siblings by reply_no asc, reply_parent asc 
	</select>
	
	<insert id="insertReply">
		insert
		  into tb_reply
		  (
		    reply_no
		  , reply_type
		  , re_board_no
		  , reply_depth
		  , reply_parent
		  , reply_content
		  , reply_writer
		  , reply_job
		  )
		  values
		  (
		    seq_reno.nextval
		  , 2
		  , #{reBoardNo}
		  , #{replyDepth}
		  , #{replyParent}
		  , #{replyContent}
		  , #{replyWriter}
		  , #{replyJob}
		  )
	</insert>
	
	<update id="updateReply">
		update tb_reply
		   set reply_content = #{replyContent}
		     , reply_mo_date = sysdate
		 where reply_no = #{replyNo}
	</update>
	
	<select id="selectReply" resultMap="replyResult">
		select reply_no
			 , re_board_no
			 , reply_depth
			 , reply_parent
			 , reply_content
			 , reply_writer
			 , reply_job
			 , to_char(reply_date, 'YYYY-MM-DD (DY) HH24:MI') as "reply_date"
			 , reply_status
		  from tb_reply
		 where reply_no = #{replyNo}
	</select>
	
	<update id="deleteReply">
		update tb_reply
		   set reply_status = 'N'
		 where reply_no = #{replyNo}
	</update>
	
	<select id="selectListCount" resultType="_int">
		select count(*)
		  from 
			    (		  
				 select cnsln_no
					  , cnsln_title
					  , cnsln_writer
					  , cnsln_start_date
					  , cnsln_end_date
					  , cnsln_charge_no
					  , cnsln_charge_list
					  , cnsln_phone
					  , cnsln_topic
					  , cnsln_content
					  , cnsln_real
					  , cnsln_create_date
					  , cnsln_count
					  , cnsln_status
				   from tb_cnsln
				   join tb_member m on (cnsln_writer = mem_no)
                   join tb_job j on (m.job_code = j.job_code)
                  where 1=1
					 <if test="keyword != null and keyword neq ''">
					    and cnsln_phone like '%' || #{keyword} || '%'
					 </if>
					 <if test="cate == 1">
					 	and not cnsln_status = 'NN'
					 </if>
					 <if test="cate == 2">
				 		and cnsln_status = 'Y'
				 		and cnsln_real is null
				 	</if>
				 	<if test="cate == 3">
				 		and cnsln_status = 'Y'
				 		and cnsln_real is not null
				 	</if>
				 	<if test="cate == 4">
				 		and cnsln_status = 'N'
				 	</if>
				 union
				 select cnsln_no
					  , cnsln_title
					  , cnsln_writer
					  , cnsln_start_date
					  , cnsln_end_date
					  , cnsln_charge_no
					  , cnsln_charge_list
					  , cnsln_phone
					  , cnsln_topic
					  , cnsln_content
					  , cnsln_real
					  , cnsln_create_date
					  , cnsln_count
					  , cnsln_status
				   from tb_cnsln
				   join tb_member m on (cnsln_writer = mem_no)
                   join tb_job j on (m.job_code = j.job_code)
                  where 1=1
					 <if test="keyword != null and keyword neq ''">
					    and cnsln_title like '%' || #{keyword} || '%'
					 </if>
					 <if test="cate == 1">
					 	and not cnsln_status = 'NN'
					 </if>
					 <if test="cate == 2">
				 		and cnsln_status = 'Y'
				 		and cnsln_real is null
				 	</if>
				 	<if test="cate == 3">
				 		and cnsln_status = 'Y'
				 		and cnsln_real is not null
				 	</if>
				 	<if test="cate == 4">
				 		and cnsln_status = 'N'
				 	</if>
				)
	</select>
	
	<select id="selectCnslnReList" resultMap="cnslnResult">
		select *
		  from (
				select *
				  from (
						 select cnsln_no
							  , cnsln_title
							  , m.mem_name || ' ' || j.job_name as "cnsln_writer"
							  , m.mem_name
							  , j.job_name as "job_name"
							  , cnsln_start_date
							  , cnsln_end_date
							  , cnsln_status
							  , cnsln_charge_no
							  , cnsln_charge_list
							  , cnsln_phone
							  , cnsln_topic
							  , cnsln_content
							  , cnsln_real
							  , to_char(cnsln_create_date, 'YYYY-MM-DD') as "cnsln_create_date"
							  , cnsln_count
						   from tb_cnsln
						  join tb_member m on (cnsln_writer = mem_no)
                   		  join tb_job j on (m.job_code = j.job_code)
						 where 1=1
						 <if test="keyword != null and keyword neq ''">
						    and cnsln_phone like '%' || #{keyword} || '%'
						 </if>
						 <if test="cate == 1">
						 	and not cnsln_status = 'NN'
						 </if>
						 <if test="cate == 2">
					 		and cnsln_status = 'Y'
					 		and cnsln_real is null
					 	</if>
					 	<if test="cate == 3">
					 		and cnsln_status = 'Y'
					 		and cnsln_real is not null
					 	</if>
					 	<if test="cate == 4">
					 		and cnsln_status = 'N'
					 	</if>
						 )
				 union
				 select *
				   from (
				   		 select cnsln_no
							  , cnsln_title
							  , m.mem_name || ' ' || j.job_name as "cnsln_writer"
							  , m.mem_name
							  , j.job_name as "job_name"
							  , cnsln_start_date
							  , cnsln_end_date
							  , cnsln_status
							  , cnsln_charge_no
							  , cnsln_charge_list
							  , cnsln_phone
							  , cnsln_topic
							  , cnsln_content
							  , cnsln_real
							  , to_char(cnsln_create_date, 'YYYY-MM-DD') as "cnsln_create_date"
							  , cnsln_count
						   from tb_cnsln
						  join tb_member m on (cnsln_writer = mem_no)
                   		  join tb_job j on (m.job_code = j.job_code)
						 where 1=1
						 <if test="keyword != null and keyword neq ''">
						    and cnsln_title like '%' || #{keyword} || '%'
						 </if>
						 <if test="cate == 1">
						 	and not cnsln_status = 'NN'
						 </if>
						 <if test="cate == 2">
					 		and cnsln_status = 'Y'
					 		and cnsln_real is null
					 	</if>
					 	<if test="cate == 3">
					 		and cnsln_status = 'Y'
					 		and cnsln_real is not null
					 	</if>
					 	<if test="cate == 4">
					 		and cnsln_status = 'N'
					 	</if>
					)
				)
			 order
			    by cnsln_no desc
	</select>
	
	<update id="deleteReCnsln">
		update tb_cnsln
		   set cnsln_status = 'NN'
		 where cnsln_no = #{cNo}
	</update>
	
	<select id="selectStudentList" resultMap="studentResult">
		select
			   student_no
			 , student_name
			 , student_phone
			 , student_email
			 , student_birth
			 , student_gender
			 , student_en_date
		  from tb_student
		 where student_name like '%' || #{key} || '%'
		 order
		   by student_no desc
	</select>
	
	<select id="selectStudent" resultMap="studentResult">
		select
			   student_no
			 , student_name
			 , student_phone
			 , student_email
			 , student_birth
			 , student_gender
			 , student_en_date
		  from tb_student
		 where student_no = #{sNo}
	</select>
	
	<update id="updateStudent">
		update tb_student
		   set student_name = #{studentName}
		   	 , student_gender = #{studentGender}
		   	 , student_phone = #{studentPhone}
		   	 , student_birth = #{studentBirth}
		   	 , student_email = #{studentEmail}
		 where student_no = #{studentNo} 
	</update>
  
</mapper>
