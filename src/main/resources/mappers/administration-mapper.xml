<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="administrationMapper">

	<resultMap id="studentResult" type="Student">
		<result column="student_no" property="studentNo" />
		<result column="student_name" property="studentName" />
		<result column="student_phone" property="studentPhone" />
		<result column="student_email" property="studentEmail" />
		<result column="student_birth" property="studentBirth" />
		<result column="student_gender" property="studentGender" />
		<result column="student_en_date" property="studentEnDate" />
		<result column="class_title" property="classTitle" />
	</resultMap>
	
	<resultMap id="regClassResult" type="RegClass">
		<result column="reg_no" property="regNo" />
		<result column="class_no" property="classNo" />
		<result column="student_no" property="studentNo" />
		<result column="mem_name" property="memName" />
		<result column="student_name" property="studentName" />
		<result column="class_title" property="classTitle" />
		<result column="class_start_date" property="classStartDate" />
		<result column="class_end_date" property="classEndDate" />
		<result column="class_fee" property="classFee" />
		<result column="reg_date" property="regDate" />
		<result column="reg_return" property="regReturn" />
	</resultMap>
	
	<resultMap id="cnslnResult" type="Cnsln">
		<result column="cnsln_no" property="cnslnNo" />
		<result column="cnsln_modify_date" property="cnslnModifyDate" />
		<result column="cnsln_topic" property="cnslnTopic" />
		<result column="cnsln_real" property="cnslnReal" />
		<result column="student_no" property="studentNo" />
	</resultMap>

	<!-- 학생 주소록 페이징 처리 (전체) -->
	<select id="selectListStCount" resultType="_int">
		select
			   count(*)
		  from tb_student
	</select>
	
	<!-- 학생 주소록 리스트 조회 (전체) -->
	<select id="selectStAddressList" resultMap="studentResult">
		select
			   student_no
			 , student_name
			 , student_phone
			 , student_email
			 , student_birth
			 , student_gender
			 , student_en_date
		  from tb_student 
		<!--  order
		 	by student_en_date desc -->
	</select>
	
	<!-- 학생 주소록 상세 조회 (전체) -->
	<select id="selectStudent" resultMap="studentResult">
		select
			   student_no
			 , student_name
			 , student_phone
			 , student_email
			 , student_birth
			 , student_gender
			 , student_en_date
		  from tb_student 
		 where student_no = #{studentNo}
	</select>
	
	<!-- 학생 수강 강의 정보 -->
	<select id="selectListRegClass" resultMap="regClassResult">
		select
		       reg_no
		     , class_no
		     , student_no
		     , class_title
		     , class_start_date
		     , class_end_date
		     , to_char(class_fee, 'FM999,999,999') as "class_fee"
		  from tb_reg_class r
		  join tb_class c using(class_no)
		 where student_no = #{studentNo}
	</select>
	
	<!-- 학생 정보 수정 -->
	<update id="updateStudent">
		update tb_student
		   set student_name = #{studentName}
		   	 , student_gender = #{studentGender}
		   	 , student_phone = #{studentPhone}
		   	 , student_birth = #{studentBirth}
		 where student_no = #{studentNo} 
	</update>
	
	<!-- 학생 주소록 페이징 처리 (강사) -->
	<select id="selectListTeCount" resultType="_int">
		select
		       count(*)
		  from tb_student s
		  join tb_reg_class rc using(student_no)
		  join tb_class c using(class_no)
		 where c.mem_no = #{memNo}
		   and rc.reg_status = 2
	</select>
	
	<!-- 학생 주소록 리스트 조회 (강사) -->
	<select id="selectTeAddressList" resultMap="studentResult">
		select
		       student_no
		     , student_name
		     , class_title
		     , student_email
		  from tb_student s
		  join tb_reg_class rc using(student_no)
		  join tb_class c using(class_no)
		 where c.mem_no = #{memNo}
		   and reg_status = 2
		<choose>
			<when test="range == 'desc'">
			order 
				by reg_date desc
			</when>
			<otherwise>
			order 
				by reg_date
			</otherwise>
		</choose>
	</select>
	
	<!-- 수강 신청 목록 페이징 처리 -->
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from tb_reg_class
		 where reg_status = #{regStatus}
	</select>
	
	<!-- 수강 신청 목록 조회 -->
	<select id="selectRegClassList" resultMap="regClassResult">
		select
		       reg_no
		     , class_title
		     , reg_date
		     , mem_name
		     , student_no
		     , student_name
		     , reg_return
		  from tb_reg_class r
		  join tb_class c using(class_no)
		  join tb_student s using(student_no)
		  join tb_member m using(mem_no)
		 where reg_status = #{regStatus}
	</select>
	
	<!-- 수강 신청 승인 -->
	<update id="updateRegClass">
		update tb_reg_class
		   set reg_status = 2
		 where reg_no = #{regNo}
	</update>
	
	<!-- 수강 신청 반려 -->
	<update id="returnRegClass">
		update tb_reg_class
		   set reg_status = 3
		     , reg_return = #{regReturn}
		 where reg_no = #{regNo}
	</update>
	
	<!-- 학생 상담 이력 조회 -->
	<select id="selectCnslnA" resultMap="cnslnResult">
		select
			   cnsln_no
		     , cnsln_modify_date
		     , cnsln_topic
		     , mem_name || ' ' || job_name as "cnsln_real"
		     , student_no
		  from tb_cnsln c
		  join tb_member m on(c.cnsln_real = m.mem_no)
  		  join tb_job j using(job_code)
		 where cnsln_status = 'Y'
		   and cnsln_content is not null
		   and student_no = #{studentNo}
	</select>
	
	
</mapper>
