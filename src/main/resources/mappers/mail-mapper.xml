<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">

	<resultMap id="mailResult" type="Mail">
		<result column="mail_no" property="mailNo" />
		<result column="mem_no" property="memNo" />
		<result column="tag_no" property="tagNo" />
		<result column="mail_temporary" property="mailTemporary" />
		<result column="receiver_mem" property="receiverMem" />
		<result column="cc_mem" property="ccMem" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_content" property="mailContent" />
		<result column="mail_type" property="mailType" />
		<result column="send_date" property="sendDate" />
		<result column="send_name" property="sendName" />
		<association property="mailStatus" resultMap="mailStatusResult" />
		<association property="attachment" resultMap="attachmentResult" />
	</resultMap>

	<resultMap id="mailStatusResult" type="MailStatus">
		<result column="send_mail" property="sendMail" />
		<result column="receive_mail" property="receiveMail" />
		<result column="mail_folder" property="mailFolder" />
		<result column="mail_read" property="mailRead" />
		<result column="mail_delete" property="mailDelete" />
		<result column="mail_spam" property="mailSpam" />
		<result column="mail_important" property="mailImportant" />
	</resultMap>
	
	<resultMap id="attachmentResult" type="Attachment">
		<result column="at_no" property="atNo" />
		<result column="at_ref_bno" property="atRefBno" />
		<result column="at_category" property="atCategory" />
		<result column="at_origin_name" property="atOriginName" />
		<result column="at_change_name" property="atChangeName" />
		<result column="at_status" property="atStatus" />
		<result column="at_count" property="atCount" />
	</resultMap>
	
	<resultMap id="publicAddResult" type="Member">
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_name" property="deptCode"/>
		<result column="job_name" property="jobCode"/>
		<result column="mem_phone" property="memPhone"/>
		<result column="mem_businessnum" property="memBusinessnum"/>
		<result column="mem_email" property="memEmail"/>
		<result column="mem_birth" property="memBirth"/>
		<result column="mem_postal_code" property="memPostalCode"/>
		<result column="mem_postal_ad" property="memPostalAd"/>
		<result column="mem_postal_detail" property="memPostalDetail"/>
		<result column="mem_postal_refer" property="memPostalRefer"/>
		<result column="mem_enroll_date" property="memEnrollDate"/>
		<result column="mem_resign_date" property="memResignDate"/>
		<result column="mem_resign_status" property="memResignStatus"/>
		<result column="mem_profile" property="memProfile"/>
	</resultMap>
	
	<resultMap id="addressResult" type="Address">
		<result column="add_per_no" property="addPerNo" />
		<result column="mem_no" property="memNo" />
		<result column="add_no" property="addNo" />
		<result column="add_name" property="addName" />
		<result column="add_dept" property="addDept" />
		<result column="add_job" property="addJob" />
		<result column="add_phone" property="addPhone" />
		<result column="add_email" property="addEmail" />
		<result column="add_memo" property="addMemo" />
		<result column="add_enroll_date" property="addEnrollDate" />
	</resultMap>

	<!-- 보낸 메일 개수 조회 -->
	<select id="sendListCount" resultType="_int">
		select
		    count(*)
		from tb_mail
		where mem_no = #{memNo}
	</select>

	<!-- 보낸 메일함 조회 -->
	<select id="selectSendMailList" resultMap="mailResult">
		select
		    mail_no
		  , mem_no
		  , m.tag_no
		  , receiver_mem
		  , cc_mem
		  , to_char(send_date, 'YYYY-MM-DD(DY) HH24:MI:SS') "send_date"
		  , mail_title
		  , mail_content
		  , mail_type
		  , mail_folder
		  , mail_read
		  , mail_delete
		  , mail_spam
		  , mail_important
		  , (
		        select
		            count(*)
		        from tb_attachment
		        where at_category = 2
		          and at_ref_bno = mail_no
		  
		     ) "at_count"
		from tb_mail m
		join tb_mail_status ms using (mail_no)
		where mem_no = #{memNo}
		  and mail_folder = 1
		order 
            by mail_type, mail_no
	</select>
	
	<!-- 받은 메일 개수 조회 -->
	<select id="receiveListCount" resultType="_int">
		select
		    count(*)
		from tb_mail_status
		where receive_mail = #{memEmail}
		  and mail_folder = 2
	</select>
	
	<!-- 받은 메일 중 안읽은 메일 개수 조회 -->
	<select id="receiveUnReadCount" resultType="_int">
		select
		    count(*)
		from tb_mail_status
		where receive_mail = #{memEmail}
		  and mail_folder = 2
		  and mail_read = 'N'
	</select>
	
	<!-- 받은 메일 목록 조회 -->
	<select id="selectReceiveMailList" resultMap="mailResult">
		select
		    mail_no
		  , mem_no
		  , m.tag_no
		  , (
                select
                    mem_name
                from tb_member
                where mem_email = send_mail
            ) "send_name"
          , send_mail
		  , receive_mail
		  , cc_mem
		  , to_char(send_date, 'YYYY-MM-DD(DY) HH24:MI:SS') "send_date"
		  , mail_title
		  , mail_content
		  , mail_type
		  , mail_folder
		  , mail_read
		  , mail_delete
		  , mail_spam
		  , mail_important
		  , (
		        select
		            count(*)
		        from tb_attachment
		        where at_category = 2
		          and at_ref_bno = mail_no
		     ) "at_count"
		from tb_mail m
		join tb_mail_status ms using (mail_no)
		where mail_folder in (2,3)
		  and receive_mail = #{memEmail}
		order 
    		by mail_type, mail_no
	</select>
	
	<!-- 공용 주소록에 들어간 사원 목록 조회(주소록에서 찾기) -->
	<select id="selectPublicAddress" resultMap="publicAddResult">
		select
			  mem_no
			, mem_name
			, dept_name
			, job_name
			, mem_businessnum
			, mem_email
			, mem_phone
		from tb_member
		 join tb_job using (job_code)
		 join tb_department using (dept_code)
		where mem_resign_status = 'N'
			order
				by mem_no
	</select>
	
	<!-- 개인 주소록 기본 번호(주소록에서 찾기) -->
	<select id="selectIndivBasicNum" resultType="_int">
		select 
		    add_no
		from tb_add_out
		where mem_no = #{memNo}
		  and rownum = 1
		order by add_no
	</select>
	
	<!-- 개인 주소록에 들어간 사원 목록 조회(주소록에서 찾기) -->
	<select id="selectIndivAddress" resultMap="addressResult">
		select
		    add_per_no
		  , ao.mem_no "mem_no"
		  , ao.add_no "add_no"
		  , a.add_name "add_name"
		  , nvl(add_dept,'') "add_dept"
		  , nvl(add_job, '') "add_job"
		  , nvl(add_phone, '') "add_phone"
		  , nvl(add_email, '') "add_email"
		  , nvl(add_memo, '') "add_memo"
		  , ao.add_enroll_date "add_enroll_date"
		from tb_address a
		join tb_add_out ao on (ao.add_no = a.add_no)
		where ao.mem_no = #{memNo}
		  and ao.add_no = #{addNo} 
			order 
				by add_per_no
	</select>
	
	<!-- 개인 주소록 카테고리(주소록에서 찾기) -->
	<select id="selectIndivCategory" resultMap="addressResult">
		select
			add_no
		  , add_name
		  , mem_no
		from tb_add_out
		where mem_no = #{memNo}
		order 
		    by add_no asc
	</select>
	
	<!-- 중요메일 설정 -->
	<update id="updateImportant">
		update tb_mail_status
			<choose>
				<when test='mailImportant == "N"'>
					set mail_important = 'Y'
				</when>
				<otherwise>
					set mail_important = 'N'
				</otherwise>
			</choose>
		where mail_no = #{mailNo}
			<choose>
				<when test="receiveMail == null">
					and send_mail = #{sendMail}
				</when>
				<otherwise>
				  and receive_mail = #{receiveMail}
				</otherwise>
			</choose>
		  and mail_folder = #{mailFolder}
	</update>
	
	<!-- 메일 전송 -->
	<insert id="insertMail">
		insert
		    into tb_mail
		    (
		      mail_no
		    , mem_no
		    , receiver_mem
		    , cc_mem
		    , mail_title
		    , mail_content
		    , mail_type
		    , send_date
		    )
		 values
		    (
		      seq_mano.nextval
		    , #{memNo}
		    , #{receiverMem}
		    , #{ccMem}
		    , #{mailTitle}
		    , #{mailContent}
		   	<if test="mailType != null">
		   	, 1
		   	</if>
		    <if test="mailType == null">
		    , 2
		    </if>
		    , sysdate
		    )
	</insert>
	
	<!-- 메일 상태 전송 -->
	<insert id="insertMailStatus">
		insert 
		    into tb_mail_status
		    (
		      mail_no
		    , send_mail
		    , receive_mail
		    , mail_folder
		    )
		 values
		    (
		      seq_mano.currval
		    , #{sendMail}
		    , #{receiveMail}
		    , #{mailFolder}
		     )
	</insert>
	
	<!-- 첨부파일 전송 -->
	<insert id="insertAttachment">
  		insert
  		  into tb_attachment
  		  (
  		  	at_no
  		  , at_ref_bno
  		  , at_category
  		  , at_origin_name
  		  , at_change_name
  		  )
  		  values
  		  (
  		  	seq_atno.nextval
  		  , seq_mano.currval
  		  , 2
  		  , #{atOriginName}
  		  , #{atChangeName}
  		  )
	</insert>

</mapper>
