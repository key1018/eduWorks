<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="scheduleMapper">

	<resultMap id="memberResult" type="Member">
		<result column="mem_no" property="memNo" />
		<result column="mem_name" property="memName" />
		<result column="dept_code" property="deptCode" />
		<result column="job_code" property="jobCode" />
		<result column="job_name" property="jobName" />
		<result column="mem_profile" property="memProfile" />
	</resultMap>
	
	<resultMap id="mycalResult" type="Mycal">
		<result column="mycal_no" property="mycalNo" />
		<result column="mem_no" property="memNo" />
		<result column="mycal_name" property="mycalName" />
		<result column="mycal_color" property="mycalColor" />
	</resultMap>
	
	<resultMap id="scheduleResult" type="Schedule">
		<result column="sche_no" property="scheNo" />
		<result column="sche_title" property="scheTitle" />
		<result column="sche_writer" property="scheWriter" />
		<result column="sche_start_date" property="scheStartDate" />
		<result column="sche_end_date" property="scheEndDate" />
		<result column="sche_all" property="scheAll" />
		<result column="sche_cmpy" property="scheCmpy" />
		<result column="sche_open" property="scheOpen" />
		<result column="mycal_no" property="mycalNo" />
		<result column="sche_atnd_no" property="scheAtndNo" />
		<result column="sche_atnd_list" property="scheAtndList" />
		<result column="sche_place" property="schePlace" />
		<result column="sche_content" property="scheContent" />
		<result column="sche_create_date" property="scheCreateDate" />
		<result column="sche_modify_date" property="scheModifyDate" />
		<result column="sche_status" property="scheStatus" />
		<collection property="mycal" resultMap="mycalResult" />
	</resultMap>
	
	<resultMap id="replyResult" type="Reply">
		<result column="reply_no" property="replyNo" />
		<result column="re_board_no" property="reBoardNo" />
		<result column="reply_depth" property="replyDepth" />
		<result column="reply_parent" property="replyParent" />
		<result column="reply_content" property="replyContent" />
		<result column="reply_writer" property="replyWriter" />
		<result column="reply_job" property="replyJob" />
		<result column="reply_date" property="replyDate" />
		<result column="reply_status" property="replyStatus" />
	</resultMap>
	
	<select id="selectScheList" resultMap="scheduleResult">
		select sche_no
			 , sche_title
			 , sche_writer
			 , sche_start_date
			 , sche_end_date
			 , sche_all
			 , sche_cmpy
			 , sche_open
			 , mycal_no
			 , m.mycal_color
			 , sche_atnd_no
			 , sche_atnd_list
			 , sche_place
			 , sche_content
			 , sche_create_date
			 , sche_modify_date
			 , sche_status
		  from tb_schedule
		  join tb_mycal m using (mycal_no)
		 where sche_writer = #{memNo}
		   and sche_status = 'Y'
		   union
		select sche_no
			 , sche_title
			 , sche_writer
			 , sche_start_date
			 , sche_end_date
			 , sche_all
			 , sche_cmpy
			 , sche_open
			 , mycal_no
			 , m.mycal_color
			 , sche_atnd_no
			 , sche_atnd_list
			 , sche_place
			 , sche_content
			 , sche_create_date
			 , sche_modify_date
			 , sche_status
		  from tb_schedule
		  join tb_mycal m using (mycal_no)
		 where sche_cmpy = 'Y'
		   and sche_status = 'Y'
		   union
		select sche_no
			 , sche_title
			 , sche_writer
			 , sche_start_date
			 , sche_end_date
			 , sche_all
			 , sche_cmpy
			 , sche_open
			 , mycal_no
			 , m.mycal_color
			 , sche_atnd_no
			 , sche_atnd_list
			 , sche_place
			 , sche_content
			 , sche_create_date
			 , sche_modify_date
			 , sche_status
		  from tb_schedule
		  join tb_mycal m using (mycal_no)
		 where sche_status = 'Y'
		   and sche_atnd_no like '%' || #{memNo} || '%'
	</select>
	
	<select id="selectMemberList" resultMap="memberResult">
		select *
		  from
		  (select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where mem_name like '%' || #{keyword} || '%'
		   and not mem_no = #{memNo}
		 union
		 select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where job_name like '%' || #{keyword} || '%'
		   and not mem_no = #{memNo}
		 )
		 order
		    by mem_no
	</select>
	
	<select id="selectMember" resultMap="memberResult">
		select mem_no
		     , mem_name
		     , job_name
		     , dept_code
		  from tb_member
		  join tb_job using (job_code)
		 where mem_no = #{memNo}
	</select>
	
	<select id="selectMycalList" resultMap="mycalResult">
		select mycal_no
			 , mycal_name
			 , mycal_color
		  from tb_mycal
		 where mycal_status = 'Y'
		   and mem_no = #{memNo}
		 order
		    by mycal_no
	</select>
	
	<insert id="insertMycal">
		insert
		  into tb_mycal
		  (
		    mycal_no
		  , mem_no
		  , mycal_name
		  )
		  values
		  (
		    seq_myno.nextval
		  , #{memNo}
		  , #{mycalName}
		  )
	</insert>
	
	<update id="updateMycal">
		update tb_mycal
		   set mycal_name = #{mcName}
		 where mycal_no = #{mcNo}
	</update>
	
	<update id="deleteMycal">
		update tb_mycal
		   set mycal_status = 'N'
		 where mycal_no in
		 <foreach collection="array" item="arr" open="(" close=")" separator=",">
		 	#{arr}
		 </foreach>
	</update>
	
	<update id="colorMycal">
		update tb_mycal
		   set mycal_color = #{mycalColor}
		 where mycal_no = #{mycalNo}
	</update>
	
	<insert id="insertSche">
		insert
		  into tb_schedule
		  (
		    sche_no
		  , sche_title
		  , sche_writer
		  , sche_start_date
		  , sche_end_date
		  , sche_all
		  , sche_cmpy
		  , sche_open
		  , mycal_no
		  , sche_atnd_no
		  , sche_atnd_list
		  , sche_place
		  , sche_content
		  )
		  values
		  (
		    seq_scno.nextval
		  , #{scheTitle}
		  , #{scheWriter}
		  , #{scheStartDate}
		  , #{scheEndDate}
		  , #{scheAll}
		  , #{scheCmpy}
		  , #{scheOpen}
		  , #{mycalNo}
		  , #{scheAtndNo}
		  , #{scheAtndList}
		  , #{schePlace}
		  , #{scheContent}
		  )
	</insert>
	
	<select id="selectSche" resultMap="scheduleResult">
		select sche_no
			 , sche_title
			 , sche_writer
			 , sche_start_date
			 , sche_end_date
			 , sche_all
			 , sche_cmpy
			 , sche_open
			 , mycal_no
			 , sche_atnd_no
			 , sche_atnd_list
			 , sche_place
			 , sche_content
		  from tb_schedule
		 where sche_status = 'Y'
		   and sche_no = #{scheNo}
	</select>
	
	<update id="updateSche">
		update tb_schedule
		   set sche_title = #{scheTitle}
			 , sche_start_date = #{scheStartDate}
			 , sche_end_Date = #{scheEndDate}
			 , sche_all = #{scheAll}
			 , sche_cmpy = #{scheCmpy}
			 , sche_open = #{scheOpen}
			 , mycal_no = #{mycalNo}
			 , sche_atnd_no = #{scheAtndNo}
			 , sche_atnd_list = #{scheAtndList}
			 , sche_place = #{schePlace}
			 , sche_content = #{scheContent}
		 where sche_no = #{scheNo}
	</update>
	
	<update id="deleteSche">
		update tb_schedule
		   set sche_status = 'N'
		 where sche_no = #{scheNo}
	</update>
	
	<select id="selectReplyList" resultMap="replyResult">
		select reply_no
			 , re_board_no
			 , reply_depth
			 , reply_parent
			 , reply_content
			 , reply_writer
			 , reply_job
			 , to_char(reply_date, 'YYYY-MM-DD (DY) HH24:MI') as "reply_date"
			 , reply_status
		  from tb_reply
		 where reply_type = 1
		   and re_board_no = #{scheNo}
		 start with reply_parent = 0
		 connect by prior reply_no = reply_parent
		 order siblings by reply_no asc, reply_parent asc 
	</select>
	
	<insert id="insertReply">
		insert
		  into tb_reply
		  (
		    reply_no
		  , reply_type
		  , re_board_no
		  , reply_depth
		  , reply_parent
		  , reply_content
		  , reply_writer
		  , reply_job
		  )
		  values
		  (
		    seq_reno.nextval
		  , 1
		  , #{reBoardNo}
		  , #{replyDepth}
		  , #{replyParent}
		  , #{replyContent}
		  , #{replyWriter}
		  , #{replyJob}
		  )
	</insert>
	
	<update id="updateReply">
		update tb_reply
		   set reply_content = #{replyContent}
		     , reply_mo_date = sysdate
		 where reply_no = #{replyNo}
	</update>
	
	<select id="selectReply" resultMap="replyResult">
		select reply_no
			 , re_board_no
			 , reply_depth
			 , reply_parent
			 , reply_content
			 , reply_writer
			 , reply_job
			 , to_char(reply_date, 'YYYY-MM-DD (DY) HH24:MI') as "reply_date"
			 , reply_status
		  from tb_reply
		 where reply_no = #{replyNo}
	</select>
	
	<update id="deleteReply">
		update tb_reply
		   set reply_status = 'N'
		 where reply_no = #{replyNo}
	</update>
	
</mapper>
