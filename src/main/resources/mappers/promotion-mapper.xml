<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="promotionMapper">
	<resultMap id="promotionResult" type="Promotion">
		<result column="promo_no" property="promoNo" />
		<result column="promo_title" property="promoTitle" />
		<result column="promo_cate_no" property="promoCateNo" />
		<result column="promo_writer" property="promoWriter" />
		<result column="promo_content" property="promoContent" />
		<result column="promo_create_date" property="promoCreateDate" />
		<result column="promo_status" property="promoStatus" />
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
		select count(*)
		  from 
			    (		  
				 select promo_no
					 , promo_title
					 , promo_cate_no
					 , promo_writer
					 , to_char(promo_create_date, 'YYYY-MM-DD') as "promo_create_date"
					 , promo_status
				   from tb_promo
				   join tb_member m on (promo_writer = mem_no)
                   join tb_job j on (m.job_code = j.job_code)
				  where 1 = 1
					 <if test="no !=  null and no neq ''">
					 	and promo_cate_no = #{no}
					 </if>
					 <if test="keyword != null and keyword neq ''">
					    and (mem_name || ' ' || job_name) like '%' || #{keyword} || '%'
					 </if>
				 union
				 select promo_no
					 , promo_title
					 , promo_cate_no
					 , promo_writer
					 , to_char(promo_create_date, 'YYYY-MM-DD') as "promo_create_date"
					 , promo_status
				   from tb_promo
				   join tb_member m on (promo_writer = mem_no)
                   join tb_job j on (m.job_code = j.job_code)
				  where 1 = 1
					 <if test="no !=  null and no neq ''">
					 	and promo_cate_no = #{no}
					 </if>
					 <if test="keyword != null and keyword neq ''">
					    and promo_title like '%' || #{keyword} || '%'
					 </if>
				)
		 where promo_status = 'Y'
	</select>
	
	<select id="selectPromoList" resultMap="promotionResult">
		select *
		  from (
				select *
				  from (
						select promo_no
							 , promo_title
							 , promo_cate_no
							 , m.mem_name || ' ' || j.job_name as "promo_writer"
							 , to_char(promo_create_date, 'YYYY-MM-DD') as "promo_create_date"
							 , promo_status
						  from tb_promo
						  join tb_member m on (promo_writer = mem_no)
                   		  join tb_job j on (m.job_code = j.job_code)
						 where 1 = 1
						   <if test="no != null and no neq ''">
						 		and promo_cate_no = #{no}
						   </if>
						   <if test="keyword != null and keyword neq ''">
						      and (mem_name || ' ' || job_name) like '%' || #{keyword} || '%'
						   </if>
						 )
				 where promo_status = 'Y'
				 union
				 select *
				  from (
						select promo_no
							 , promo_title
							 , promo_cate_no
							 , m.mem_name || ' ' || j.job_name as "promo_writer"
							 , to_char(promo_create_date, 'YYYY-MM-DD') as "promo_create_date"
							 , promo_status
						  from tb_promo
						  join tb_member m on (promo_writer = mem_no)
                   		  join tb_job j on (m.job_code = j.job_code)
						 where 1 = 1
						   <if test="no != null and no neq ''">
						 		and promo_cate_no = #{no}
						   </if>
						   <if test="keyword != null and keyword neq ''">
						     and promo_title like '%' || #{keyword} || '%'
						   </if>
						 )
				 where promo_status = 'Y'
				)
			 order
			    by promo_no desc
	</select>
	
	<insert id="insertPromo">
		insert
		  into tb_promo
		  (
		    promo_no
		  , promo_title
		  , promo_cate_no
		  , promo_writer
		  , promo_content
		  )
		  values
		  (
		    seq_prno.nextval
		  , #{promoTitle}
		  , #{promoCateNo}
		  , #{promoWriter}
		  , #{promoContent}
		  )
	</insert>
	
	<update id="deletePromo">
		update tb_promo
		   set promo_status = 'N'
		 where promo_no in 
		 <foreach collection="array" item="arr" open="(" close=")" separator=",">
		 	#{arr}
		 </foreach>
	</update>
  
</mapper>
